# Generated by Django 4.1.2 on 2022-12-20 00:00

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '__first__'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate', models.CharField(max_length=50, verbose_name='candidate')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=100, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=250, verbose_name='title *')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('creation_date', models.DateField(auto_now_add=True)),
                ('closing_date', models.DateField(default=datetime.date(2025, 9, 15), verbose_name='closing date * ')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polls', to=settings.AUTH_USER_MODEL)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='DateCandidate',
            fields=[
                ('candidate_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='polls.candidate')),
                ('date', models.DateField(verbose_name='date')),
            ],
            options={
                'ordering': ['date', 'id'],
            },
            bases=('polls.candidate',),
        ),
        migrations.CreateModel(
            name='VotingPoll',
            fields=[
                ('poll_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='polls.poll')),
                ('poll_type', models.CharField(choices=[('Standard', 'Standard Poll'), ('Date', 'Date Poll')], default='Standard', max_length=20, verbose_name='poll type')),
                ('preference_model', models.CharField(choices=[('Approval', 'Approval Voting (Yes / No)'), ('Ranks#0', 'Simpson'), ('Ranks#0', 'Borda')], default='PositiveNegative', max_length=50, verbose_name='Preference model * ')),
                ('ballot_type', models.CharField(choices=[('Open', 'Open Ballot'), ('Secret', 'Secret Ballot'), ('Experimental', 'Experimental Ballot')], default='Open', max_length=50, verbose_name='Ballot Type')),
                ('option_choice', models.BooleanField(default=True, verbose_name='Option choice explanation')),
                ('option_modify', models.BooleanField(default=True, verbose_name='Modify choice explanation')),
                ('option_shuffle', models.BooleanField(default=False, verbose_name='Option shuffle explanation')),
                ('winner_poll', models.PositiveIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Number of Winner')),
                ('status_poll', models.BooleanField(default=True, verbose_name='Status of poll explanation')),
                ('option_blocking_poll', models.BooleanField(default=True, verbose_name='blocking option explanation')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('polls.poll',),
        ),
        migrations.CreateModel(
            name='VotingScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(verbose_name='value')),
                ('last_modification', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.candidate')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.user', verbose_name='voter')),
            ],
            options={
                'ordering': ['last_modification'],
                'unique_together': {('candidate', 'voter')},
            },
        ),
        migrations.AddField(
            model_name='candidate',
            name='poll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='polls.votingpoll'),
        ),
    ]
